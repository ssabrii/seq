
.. _program_listing_file_compiler_include_seq_llvm.h:

Program Listing for File llvm.h
===============================

|exhale_lsh| :ref:`Return to documentation for file <file_compiler_include_seq_llvm.h>` (``compiler/include/seq/llvm.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef SEQ_LLVM_H
   #define SEQ_LLVM_H
   
   #include "llvm/ADT/StringRef.h"
   #include "llvm/ADT/Triple.h"
   #include "llvm/Analysis/TargetLibraryInfo.h"
   #include "llvm/Analysis/TargetTransformInfo.h"
   #include "llvm/Bitcode/BitcodeWriter.h"
   #include "llvm/CodeGen/TargetPassConfig.h"
   #include "llvm/ExecutionEngine/ExecutionEngine.h"
   #include "llvm/ExecutionEngine/GenericValue.h"
   #include "llvm/ExecutionEngine/JITSymbol.h"
   #include "llvm/ExecutionEngine/MCJIT.h"
   #include "llvm/ExecutionEngine/OrcMCJITReplacement.h"
   #if LLVM_VERSION_MAJOR == 6
   #include "llvm/ExecutionEngine/Orc/CompileOnDemandLayer.h"
   #include "llvm/ExecutionEngine/Orc/CompileUtils.h"
   #include "llvm/ExecutionEngine/Orc/ExecutionUtils.h"
   #include "llvm/ExecutionEngine/Orc/IRCompileLayer.h"
   #include "llvm/ExecutionEngine/Orc/IRTransformLayer.h"
   #include "llvm/ExecutionEngine/Orc/LambdaResolver.h"
   #include "llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h"
   #include "llvm/ExecutionEngine/RuntimeDyld.h"
   #endif
   #include "llvm/ExecutionEngine/SectionMemoryManager.h"
   #include "llvm/IR/Argument.h"
   #include "llvm/IR/BasicBlock.h"
   #include "llvm/IR/Constants.h"
   #include "llvm/IR/DataLayout.h"
   #include "llvm/IR/DerivedTypes.h"
   #include "llvm/IR/Function.h"
   #include "llvm/IR/IRBuilder.h"
   #include "llvm/IR/InstrTypes.h"
   #include "llvm/IR/Instructions.h"
   #include "llvm/IR/LLVMContext.h"
   #include "llvm/IR/LegacyPassManager.h"
   #include "llvm/IR/LegacyPassNameParser.h"
   #include "llvm/IR/Module.h"
   #include "llvm/IR/Type.h"
   #include "llvm/IR/Verifier.h"
   #include "llvm/Support/Casting.h"
   #include "llvm/Support/DynamicLibrary.h"
   #include "llvm/Support/TargetRegistry.h"
   #include "llvm/Support/TargetSelect.h"
   #include "llvm/Support/raw_ostream.h"
   #include "llvm/Target/TargetMachine.h"
   #include "llvm/Transforms/Coroutines.h"
   #include "llvm/Transforms/IPO.h"
   #include "llvm/Transforms/IPO/PassManagerBuilder.h"
   
   #endif /* SEQ_LLVM_H */
